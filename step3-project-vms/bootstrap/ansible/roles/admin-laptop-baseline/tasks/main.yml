---
- name: Ensure the local timezone is configured
  community.general.timezone:
    name: "{{ timezone }}"
- name: Ensure admin laptop packages are installed
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - curl
      - firewalld
      - neovim
      - network-manager
      - tmux
    update_cache: yes
    cache_valid_time: 300
    lock_timeout: 180
- name: Ensure the firewalld service is enabled and started
  ansible.builtin.systemd:
    name: firewalld
    enabled: yes
    state: started
- name: Ensure the external zone is the default zone
  ansible.builtin.command: firewall-cmd --set-default-zone=external
  changed_when: '"ZONE_ALREADY_SET" not in default_zone_set.stderr'
  register: default_zone_set
- name: Ensure the SSH service is allowed from the outside
  ansible.posix.firewalld:
    zone: external
    service: ssh
    permanent: yes
    immediate: yes
    state: enabled
  when: ansible_controller_is_external
- name: Ensure the WAN interface is in the external zone
  ansible.posix.firewalld:
    zone: external
    interface: "{{ laptop_wan_interface }}"
    permanent: yes
    immediate: yes
    state: enabled
- name: Ensure the LAN interface is in the trusted zone
  ansible.posix.firewalld:
    zone: trusted
    interface: "{{ laptop_lan_interface }}"
    permanent: yes
    immediate: yes
    state: enabled
- name: Ensure the NetworkManager service is enabled and started
  ansible.builtin.systemd:
    name: NetworkManager
    enabled: yes
    state: started
- name: Ensure the "Wired connection 1" connection has been removed
  community.general.nmcli:
    type: ethernet
    conn_name: "Wired connection 1" 
    state: absent
- name: Ensure the "Wired connection 2" connection has been removed
  community.general.nmcli:
    type: ethernet
    conn_name: "Wired connection 2" 
    state: absent
- name: Ensure the "WAN" connection exists
  community.general.nmcli:
    type: ethernet
    conn_name: 'WAN'
    ifname: "{{ laptop_wan_interface }}"
    method4: manual
    ip4:
      - "{{ laptop_wan_address }}/{{ networks.WAN.network_prefix }}"
    #gw4: "{{ networks.wan.network_gateway }}"
    zone: external
    state: present
- name: Ensure the "LAN" connection exists
  community.general.nmcli:
    type: ethernet
    conn_name: 'LAN'
    ifname: "{{ laptop_lan_interface }}"
    method4: manual
    ip4:
      - "{{ laptop_lan_address }}/{{ networks.LAN.network_prefix }}"
    #gw4: "{{ networks.lan.network_gateway }}"
    zone: trusted
    state: present
- name: Ensure the "WAN" connection is activated
  community.general.nmcli:
    conn_name: 'WAN'
    state: up
  changed_when: false
- name: Ensure the "LAN" connection is activated
  community.general.nmcli:
    conn_name: 'LAN'
    state: up
  changed_when: false
