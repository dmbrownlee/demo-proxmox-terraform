---
- name: Install wger into the cluster
  hosts: k3s_first_control_plane
  vars_files:
    - "{{ tf_workspace }}.vars.yml"
  become: true
  tasks:
    - name: Ensure the wger namespace exists
      kubernetes.core.k8s:
        name: wger
        api_version: v1
        kind: Namespace
        state: present
    - name: Ensure credentials for the wger database exist
      kubernetes.core.k8s:
        state: present
        template: secret-wger-postgres-credentials.yml.j2
    - name: Ensure wger credentials for minio exist
      kubernetes.core.k8s:
        state: present
        namespace: wger
        template: secret-wger-minio-credentials.yml.j2
    - name: Ensure a cnpg database exists for wger (takes a while - waiting up to 10 min.)
      kubernetes.core.k8s:
        state: present
        template: cnpg-wger-cluster.yml.j2
        wait: yes
        wait_timeout: 600
        wait_condition:
          type: Ready
          status: "True"
          reason: ClusterIsReady
    - name: Ensure the helm repo for wger is added
      kubernetes.core.helm_repository:
        name: wger
        repo_url: "https://wger-project.github.io/helm-charts"
    - name: Ensure the wger helm chart is installed
      kubernetes.core.helm:
        name: wger
        chart_ref: wger/wger
        chart_version: "{{ wger_version }}"
        release_namespace: wger
        create_namespace: true
        wait: true
        values: "{{ lookup('template', 'helm-values-wger.yml.j2') | from_yaml }}"
    - name: Ensure the wger ingress configuration has been applied
      kubernetes.core.k8s:
        state: present
        template: traefik-ingress-wger.yml.j2
    - name: Ensure scheduled backups for the database are configured and initial backup performed
      kubernetes.core.k8s:
        state: present
        template: cnpg-wger-cluster-backup.yml.j2
        wait: yes
        wait_timeout: 600
        # wait_condition:
        #   type: LastBackupSucceeded
        #   status: "True"
        #   reason: LastBackupSucceeded
