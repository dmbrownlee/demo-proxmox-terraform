replicaCount: 1
deploymentStrategyType: RollingUpdate

image:
  registry: "docker.io"
  repository: "fireflyiii/core"
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

persistence:
  enabled: true
  storageClassName: nfs-client
  accessModes: ReadWriteOnce
  storage: 1Gi
  existingClaim: firefly-attachments

# -- Environment variables for Firefly III. See docs at: https://github.com/firefly-iii/firefly-iii/blob/main/.env.example
config:
  env:
    DB_HOST: "firefly-rw"
    DB_CONNECTION: pgsql
    DB_PORT: "5432"
    DB_DATABASE: {{{ firefly_db_name }}}
    DB_USERNAME: {{{ firefly_db_username }}}
    DEFAULT_LANGUAGE: "en_US"
    DEFAULT_LOCALE: "equal"
    TZ: "America/Vancouver"
    TRUSTED_PROXIES: "**"

# -- Create a new Secret from values file to store sensitive environment variables. Make sure to keep your secrets encrypted in the repository! For example, you can use the 'helm secrets' plugin (https://github.com/jkroepke/helm-secrets) to encrypt and manage secrets. If the 'config.existingSecret' value is set, a new Secret will not be created.
secrets:
  env:
    APP_PASSWORD: "{{{ firefly_db_password }}}"
    DB_PASSWORD: "{{{ firefly_db_password }}}"

cronjob:
  enabled: false

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Here, you can specify custom volumes to use.
extraVolumes: []
  # - name: db-tls-firefly
  #   secret:
  #     secretName: db-tls-firefly
  #     defaultMode: 0440

# And here, your custom volume mounts.
extraVolumeMounts: []
  # - name: db-tls-firefly
  #   mountPath: /db-cert
  #   readOnly: true

