---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: firefly
  namespace: firefly
spec:
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.5-v0.3.0@sha256:be3f025d79aa1b747817f478e07e71be43236e14d00d8a9eb3914146245035ba
  instances: 1
  enableSuperuserAccess: true

  # affinity:
  #   nodeSelector:
  #     label: node.kubernetes.io/cnpg=cnpg
  #   podAntiAffinityType: preferred
  #   tolerations:
  #     - effect: NoSchedule
  #       key: reservation
  #       operator: Equal
  #       value: database

  postgresql:
    shared_preload_libraries:
      - "vectors.so"

  managed:
    roles:
      - name: "{{ firefly_db_username }}"
        superuser: true
        login: true
        passwordSecret:
          name: firefly-postgres-user
  bootstrap:
{% if firefly_recover_db_from_backup %}
    recovery:
      database: "{{ firefly_db_name }}"
      owner: "{{ firefly_db_username }}"
      source: dbRecoverySource

  externalClusters:
    - name: dbRecoverySource
      plugin:
        name: barman-cloud.cloudnative-pg.io
        parameters:
          barmanObjectName: "{{ firefly_objectstore_name }}"
          serverName: "firefly"
{% else %}
    initdb:
      database: "{{ firefly_db_name }}"
      owner: "{{ firefly_db_username }}"
      secret:
        name: firefly-postgres-user
{% endif %}

  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: "{{ firefly_objectstore_name }}"
  storage:
    size: "{{ firefly_db_size }}"
