# Rename this file to terraform.tfvars after supplying your own site
# specific values.


#==========================================
# Uncomment to enable optional VMs
#==========================================
#want_k8s          = true
#want_minikube     = true
#want_k3s          = true  # including longhorn, kube-vip, prometheus, and grafana
#want_k3s_photos   = true
#want_yunohost     = true


# These are only for development
want_ansible_output = true
#want_k3s_master     = false
#want_k3s_servers    = false
#want_k3s_agents     = false

#==========================================
# Proxmox connectivity and authentication
#==========================================
# Here is where we specify the URL for the web API for the Proxmox cluster.
endpoint = "https://pve1.example.com:8006/"

# The API Token is the combination of the ID and secret:
api_token = "terraform@pve!demo=12345678-90ab-cdef-1234-567890abcdef"


# Here we specify which Proxmox node on which to store the VM templates and
# the name of the storage we use for storing ISO images (actually qcow2
# cloud-init images ).
vm_storage = "truenas1"
vm_template_storage = {
  node = "pve3",
  name = "truenas1"
}
iso_storage = {
  node = "pve3",
  name = "truenas1"
}

# Here is where we specify the node interface to which we add the VLANs. The
# switch port patched to this interface should be configured as a VLAN trunk.
node_vlan_interfaces = {
  pve1 = "vmbr0"
  pve2 = "vmbr0"
  pve3 = "vmbr0"
}

# This delay, in seconds, is to reduce output of failed connections attempts
# while we're waiting for the SSH service to start.
sleep_seconds_before_remote_provisioning = 40

#=============
# Cloud-init
#=============
# This is where we specify the user credentials for the administrative user
# cloud-init will create on each VM cloned from a cloud-init template image.
# Since we will be using Ansible for configuration management, it makes sense
# for this to be the "ansible" user.  If any other users need to be configured,
# Ansible can do that.  After Terraform has created and booted the VM, it will
# run Ansible to do further machine configuration.  The corresponding private
# SSH key should be added to your SSH agent as SSH is usually configured to
# disallow password logins.  Note, the public key does not include the comment
# you see at the end of the line in the .pub file.
ci_user     = "ansible"
ci_password = "AGoodPassword"

#=============
# Ansible
#=============
# ssh_private_key_files is a map of paths to SSH private key files indexed by
# username.  Here, we specify the location of the "ansible" user's private
# SSH key that needs to be known when Terraform runs ansible-playbook.
ssh_private_key_files = {
  ansible = "~/keys/ansible"
}
# Uncomment if you don't want Ansible playbooks to be run after the first time.
#ansible_replayable = false

#=============
# Site Config
#=============
site_domain = "site1.example.com"

#=============
# Site VLANs
#=============
# vlans is a map of site VLAN objects indexed by name.  Besides the VLAN ID,
# each VLAN specifies networking configuration for the netblock the VLAN uses
# in case the virtual machines connected to the VLAN do not use DHCP for
# network configuration.
vlans = [
  {
    vlan_id          = 10,
    comment          = "PROVISIONING",
    ipv4_gateway     = "192.168.0.254",
    ipv4_dns_servers = ["192.168.80.254"]
  },
]
